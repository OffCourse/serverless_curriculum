goal: Compose Large Systems with AWS Step Functions
description: 'Cloud functions are great for simple tasks, but more ofter than not you want to glue several of them together to accomplish more complex tasks. AWS Step Functions make that very easy.'
checkpoints:
  - task: Divide your task into smaller ones
    resource-url: 'https://www.youtube.com/watch?v=L2m-S0Pj_Xk'
  - task: Create a Lambda for each task
    resource-url: 'https://www.codecademy.com/courses/learn-alexa-lambda/lessons/create-lambda-function/exercises/intro-aws-lambda?'
  - task: Connect tasks to step functions
    resource-url: 'https://cloudacademy.com/blog/aws-step-functions-a-serverless-orchestrator/'
  - task: Manage choices (choice states)
    resource-url: 'http://vgaltes.com/serverless/step-functions-choice-pass-fail-succeed-states/'
  - task: Work in parallel
    resource-url: 'https://serverless.com/blog/aws-lambda-power-tuning/'
  - task: Handle errors gracefully
    resource-url: 'http://vgaltes.com/serverless/handling-errors-in-step-functions/'
  - task: Do's and don'ts
    resource-url: 'https://medium.com/@tjholowaychuk/dos-and-don-ts-of-aws-lambda-7dfcab7ad115'
